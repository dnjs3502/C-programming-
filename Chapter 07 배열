실습 1번 

1. char ch1 은 N,I,C,E 문자 4개와 “”가 문자 1개로 인식되어서 5개이다 char ch2는 N,I,C,E 와 띄어쓰기 까지 해서 5개이므로 서로 같다. 

2. int형은 4바이트, 배열b주소의 크기는 각각 4바이트고, 2행 * 2열 * 4바이트 이기 때문에 b의 총 크기는 16바이트이다. 

3. b[0] = b[0][0] 이다. b[1]=b[1][0] 이다. 왜냐하면 b[0][0]과 b[1][0]이 각각 행이 없기 때문에, 주소가 같게 나타나서 이다. 

4. b[0][0]와 b[0][1]은 4바이트 차이가 난다. 그리고 int형은 순서가 갈수록 4바이트 씩 늘어나는데 int 형 변수 자체의 크기가 4바이트기 때문에 int형 변수와 크기가 같다. 

5. 원래 4바이트에서 8바이트로 늘어났기 때문에 각각은 4바이트 씩 차이가 나고, 전체는 16바이트 차이가 날 것이다. 


실습 2-1 

int main(void)
{
	int a[2][4] = { {1,4,2,5},{1,2,7,6} };
	int sum = 1;
	for (int i = 0; i < 2; i++)
	{
		if (i == 0) 
		{
			for (int j = 0; j < 4; j++)
			{
				printf("a[%d][%d]", i, j);
				printf("*");

				sum *= a[i][j]; 
			}
			printf("\n");
		}

		if (i == 1)
		{
			for (int j = 0; j < 4; j++)
			{
				printf("a[%d][%d]", i, j);
				if(j!=3)
				{
					printf("*");
				}
				sum *= a[i][j];
			}
			printf("\n");
		}
	}
	printf("= %d", sum);

반복문을 이용해서 [i]부분 0~1까지 [j]부분 0~3까지 조건을 설정하고 마지막에 이들의 곱셈으로 표현해준다.

그리고 if문을 이용한 i부분이 0인 경우 ,1인경우로 나누어준다. 


 실습 2-2 

char password[] = “secret” ;
char str [255];    /// 맞는 비밀번호를 설정하고 최대한 많이 받기 위해 255라는 숫자로 설정했다. 
int i;

while(true)
{

   printf(“비밀번호를 입력하세요 :” ；　
   gets(str) ; 
 for (i = 0 password[i] != ‘\0’ , i++)
{
     if(password[i] != str[i])    
{

     break;          

}
}
if(password[i]==’\0’)
{
     break ; 
}
printf(“비밀번호가 다릅니다. \n”); //// 

}
          printf(“Password confirmed. Program terminated. \n”);　　
          break;
		}
	}
	return 0;

비밀번호가 다를 경우, if문을 빠져나와 비밀번호가 다릅니다를 출력하고  다시 반복문을 통해 반복해준다. 

비밀번호가 맞다면 if문,반복문을 빠져나와 password confirmed. program terminated를 출력하고 종료한다. 




