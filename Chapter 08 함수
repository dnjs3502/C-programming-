실습8-1

#include<stdio.h>
int main(void)
{
	int fact_num,k=0;
	
	printf("Enter an integer number: ");
	scanf("%d", &k);

    fact_num = factorial(k);

//변수 facn_num과 k를 선언해준다. 변수 fact_num는 scanf를 통해 입력받은 변수 k를 factorial 함수에 집어넣어서 나온 결과이다. 

	for(k;k>1;k--)
	printf("%d X ", k); printf("1 = %d \n",fact_num);
	return 0;
}
// for문을 이용해서 팩토리얼 나열식을 표현해준다.
입력받은 숫자 k를 1바로 앞까지 점점 1씩 감소시키면서 화면에 출력되도록 하고 마지막 숫자 1은 따로 출력될 수 있도록 해준다.

int factorial(int n)
{
	if(n<=1)
		return(1);
	else
		return(n * factorial(n-1)); 
                                              
}
//// 팩토리얼함수를 선언해준다. 만약 n<=1이면 1, 아닌경우에는 n과 (n-1)!를 곱해준다. 


실습 8-2

#include <stdio.h>

int CheckPrime(int n);

int main()
{
    int n, result;
 
    printf("양의 정수 : ");
    scanf("%d", &n);
 
    result = CheckPrime(n);
 
    if (result == 1) printf("소수\n"); //// result가 1을 리턴받으면 소수로 판단한다. 
    else printf("소수 아님\n"); 

////result가 1외에 다른 것을 리턴받으면 소수가 아닌 것으로 판단한다. 
 
    return 0;
}
 
int CheckPrime(int n)
{
    int i, count = 0;
    
    for (i = 1; i <= n; i++) {
        if (n % i == 0) countt++;
    }
    
    if (count == 2) return 1;
    else          return 0;
}

/// CheckPrime 함수를 매개변수로 표현한다. 변수 I와 count를 선언해준다. 여기서 count는 약수의 개수이다. 소수의 정의는 약수가 1과 자기 자신 밖에 없는 숫자이다. 즉, 약수의 개수가 2개이다. 그러므로 입력받은 숫자 n과 변수 i가 같아질 때까지 반복문을 시행하도록 해주면서 
약수의 개수가 2개이면 소수이다. 그 외에 경우는 소수가 아니므로 0을 리턴해준다.



    

실습 8-3


//#include<stdio.h>
int main(void)
{
	int k[12] = {1,5,-10,3,6,9,10,23,5,7,-25,4};
	int c[12] = {6,4,-3,6,9,2,1,10,-7,20,13,8}; 

	int q,w,e;
	int z;
	printf("Enter an integer N (<=12)?");  
	scanf("%d", &z);
	printf("%d",z);
	q=sumarray(k,z);   
	w=sumarray(c,z);

/// scnaf를 통해 입력받은 z번째 원소까지의 배열을 계산하는 sumarray함수이다. 
변수 q,w는 각각 배열 k,c의 원소들을 계산한 결과이다.
	
	e=twosome(q,w);

//변수e는 twosome함수를 통해 위 계산 결과인 q,w 중 더 큰 것을 판별한 결과이다. 
	
	printf("Bigger sum of 12 elements is %d \n",e);

    return 0;
}

int sumarray(int array[], int size)
{
	int result = 0;
	int	i;
	for(i=0; i<size; i++)
		result += array[i];

	return result;
}


int twosome(int a, int b)
{
	if(a>b)
		return a;
	else
		return b;
}

//// 함수 sumarry와 twosome의 매개변수를 표현해준다.
sumarray는 원소 배열과 원소의 합을 구해주는 함수이다. 괄호안의 첫 번째는 각각원소들의 합을 구할 배열, 두 번째는 원소합의 크기이다. 
함수 twosome은 집합 a와 집합 b의 원소 합 중 어떤 게 더 큰 지 판별해준다. 그리고 결과에 따라 리턴해주는 값을 다르게 해주면, 최종적으로 리턴값에 따라 결과가 정해진다. 
